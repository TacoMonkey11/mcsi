package com.github.tacomonkey11.mcsi.installers

import okhttp3.OkHttpClient
import okhttp3.Request
import java.nio.file.Files
import java.nio.file.Path

private val client = OkHttpClient()
fun validateSpiotMCVersion(version: String): Boolean {
    val request = Request.Builder()
        .url("https://hub.spigotmc.org/versions/$version.json")
        .build()
    val response = client.newCall(request).execute()
    return response.isSuccessful
}

fun installSpigot(mcVersion: String, installDir: Path, craftBukkit: Boolean) {
    val buildToolsRequest = Request.Builder()
        .url("https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar")
        .build()
    val buildToolsResponse = client.newCall(buildToolsRequest).execute()
    val buildToolsJar = buildToolsResponse.body?.byteStream()
    Files.copy(buildToolsJar, installDir.resolve("BuildTools.jar"))

    val process = ProcessBuilder("java", "-jar", "-Xmx1024M", "-Xms1024M", "BuildTools.jar", "--rev", mcVersion, "--compile", if (craftBukkit) "CraftBukkit" else "Spigot")
        .redirectOutput(ProcessBuilder.Redirect.INHERIT)
        .redirectError(ProcessBuilder.Redirect.INHERIT)
        .directory(installDir.toFile())
        .start()
    process.waitFor()
    // delete junk generated by buildtools
    val files: List<String> = listOf("BuildTools.jar", "work", "BuildData", "BuildTools.log.txt", "Spigot", "CraftBukkit", "Bukkit", "apache-maven-3.6.0")
    for (file in files) {
        installDir.resolve(file).toFile().deleteRecursively()
    }
}